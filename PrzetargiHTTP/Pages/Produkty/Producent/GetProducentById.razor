@page "/Producent/{id}"
@inject PrzetargiHTTP.Data.PrzetargiService przetargiService;
@inject PrzetargiHTTP.Data.ProduktyService produktyService;
@inject NavigationManager NavManager


@if (wystawcaPrzetargu != null && przetargiWystawcy != null)
{
	<div class="card">
		<h3 class="card-header">Producent</h3>
		<div class="card-body">
			<button class="btn btn-danger" @onclick="() => Delete(wystawcaPrzetargu.Id)">Usuń</button>
			<h5 class="mt-4">Nazwa</h5><p>@wystawcaPrzetargu.Nazwa</p>
			<h5>Nip</h5><p>@wystawcaPrzetargu.Nip</p>
			<h5>Krs</h5><p>@wystawcaPrzetargu.Krs</p>
			<h5>Ulica</h5><p>@wystawcaPrzetargu.Ulica</p>
			<h5>Numer domu</h5><p>@wystawcaPrzetargu.NrDomu</p>
			<h5>Kod pocztowy</h5><p>@wystawcaPrzetargu.KodPocztowy</p>
			<h5>Miejscowość</h5><p>@wystawcaPrzetargu.Miejscowosc</p>


			<h5>Produkty dostawcy: </h5>
			<div class="table-responsive mt-3">
			<table class="mt-3">
				<thead>
					<tr>
						<th class="text-left">Nazwa</th>
						<th class="text-left">Jednostka miary</th>
						<th class="text-left">Ilość</th>
						<th class="text-left">Kategoria</th>
						<th class="text-left">Producent</th>
						<th> </th>
					</tr>
				</thead>
				<tbody>
					@foreach (var produkt in przetargiWystawcy)
					{
						<tr>
							<td class="text-left">@produkt.Nazwa</td>
							<td class="text-left">@produkt.JednostkaMiary</td>
							<td class="text-left">@produkt.Suma</td>
							<td class="text-left">@produkt.TypProduktu</td>
							<td class="text-left">@produkt.Producent.Nazwa</td>
							<td><button class="btn btn-primary btn-sm" @onclick="() => GetByIdProduktu(produkt.Id)">Zmień stan magazynowy</button></td>
						</tr>
					}
				</tbody>
			</table>
	</div>
	</div>
	</div>

}
else
{
	<p><em>Ładowanie...</em></p>
}
@code {
	public InzynierkaAPI.Models.Producent wystawcaPrzetargu = new();
	InzynierkaAPI.Models.Produkt[] przetargiWystawcy;

	[Parameter]
	public string id { get; set; }

	protected override async Task OnInitializedAsync()
	{
		if (przetargiService.isLogged == false)
			NavManager.NavigateTo("/");
		int Id = Int32.Parse(id);
		wystawcaPrzetargu = await przetargiService.GetProducentById(Id);
		if (wystawcaPrzetargu != null)
			przetargiWystawcy = await produktyService.GetAllProduktyByProducent(wystawcaPrzetargu.Id);
	}
	private void GetByIdProduktu(int id)
	{

		NavManager.NavigateTo($"/getprodukt/{id}");
	}

	private void GetbyId(int id)
	{

		NavManager.NavigateTo($"/przetargi/{id}");
	}
	private async Task Delete(int id)
	{
		await produktyService.DeleteProducent(id);
		NavManager.NavigateTo("/producenci");
	}
}
