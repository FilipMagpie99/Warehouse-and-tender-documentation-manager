@page "/adddostawca"
@using InzynierkaAPI
@using InzynierkaAPI.Models
@using PrzetargiHTTP.Data
@inject ProduktyService produktyService;
@inject PrzetargiService przetargiService;
@inject NavigationManager NavManager
@inject IJSRuntime jsr
<div class="card">
	<h3 class="card-header text-white" style="background-color: #2596be;">
		Nowy dostawca
	</h3>
<EditForm Model="@dostawca" OnValidSubmit="@HandleValidSubmit" class="form-inline rounded shadow">

		        <div class="card-body">

	<DataAnnotationsValidator />
	<ValidationSummary />
	



				<p class="text-danger">@error?.Trim('\"')</p>
				<div class="input-group mb-3 mt-3">
					<input type="text" class="form-control" @bind="krsnumber" placeholder="Wprowadź numer KRS firmy, dane zostaną pobrane automatycznie"  aria-describedby="basic-addon2">
					<div class="input-group-append">
						<input type="button" @onclick="async() => await DownloadFromKrs(krsnumber)" class="btn btn-danger" value="Pobierz dane z KRS" />
					</div>
				</div>

				<h5 class="mt-2">Nazwa firmy</h5>
				<InputText @bind-Value="dostawca.Nazwa" class="form-control" name="Nazwafirmy" />

				<h5 class="mt-2">Krs</h5>
				<InputText class="form-control bg-light" @bind-Value="dostawca.Krs" />

				<h5 class="mt-2">Nip</h5>
				<InputText @bind-Value="dostawca.Nip" class="form-control" name="Nip" />


				<h5 class="mt-2">Ulica</h5>
				<InputText @bind-Value="dostawca.Ulica" class="form-control" name="Ulica" />
	

				<h5 class="mt-2">Numer Domu</h5>
				<InputText @bind-Value="dostawca.NrDomu" class="form-control" name="NrDomu" />


				<h5 class="mt-2">Kod Pocztowy</h5>
				<InputText @bind-Value="dostawca.KodPocztowy" class="form-control" name="KodPocztowy" />


			<h5 class="mt-2">Miejscowość</h5>
				<InputText @bind-Value="dostawca.Miejscowosc" class="form-control" name="Miejscowosc" />
			<div class="row"></div>

			<button class="btn mt-3 text-white " style="background-color: #2596be;" type="submit">Utwórz</button>

		<p class="mt-3"></p>

		</div>
</EditForm>

		</div>
@code {
	private Dostawca dostawca = new();
	private string krsnumber { get; set; }
	private KrsApi krsApi = new();
	private string error { get; set; }

	private async Task HandleValidSubmit(){
		error = string.Empty;
		error  = await produktyService.AddDostawca(dostawca);
		if(error == string.Empty)
			GoBack();
	}
	private async void GoBack()
	{
		await jsr.InvokeVoidAsync("history.back");
	}
	protected override async Task OnInitializedAsync()
	{
		if (przetargiService.isLogged == false)
			NavManager.NavigateTo("/");
		await Task.CompletedTask;
	}
	private async Task DownloadFromKrs(string krsnumber)
	{
		error = string.Empty;
		Object response = await przetargiService.GetFirmaFromKrs(krsnumber);
		krsApi = response as KrsApi;
		if (krsApi == null)
			error = response as string; 
		else{
		dostawca.Nazwa = krsApi.odpis.dane.dzial1.danePodmiotu.nazwa;
		dostawca.Nip = krsApi.odpis.dane.dzial1.danePodmiotu.identyfikatory.nip;
		dostawca.Krs = krsApi.odpis.naglowekA.numerKRS;
		dostawca.Ulica = krsApi.odpis.dane.dzial1.siedzibaIAdres.adres.ulica;
		dostawca.NrDomu = krsApi.odpis.dane.dzial1.siedzibaIAdres.adres.nrDomu;
		dostawca.KodPocztowy = krsApi.odpis.dane.dzial1.siedzibaIAdres.adres.kodPocztowy;
		dostawca.Miejscowosc = krsApi.odpis.dane.dzial1.siedzibaIAdres.adres.miejscowosc;
		}
	}



}
